/*
 * Copyright (c) 2020 Adventech <info@adventech.io>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    def versionPropsFile = file('version.properties')

    if (versionPropsFile.canRead()) {
        Properties versionProps = new Properties()

        versionProps.load(new FileInputStream(versionPropsFile))

        def versionBuild = versionProps['VERSION_BUILD'].toInteger() + 1

        versionProps['VERSION_BUILD']=versionBuild.toString()
        versionProps.store(versionPropsFile.newWriter(), null)

        defaultConfig {
            applicationId "com.cryart.sabbathschool"
            minSdkVersion 16
            targetSdkVersion 29
            versionCode 37
            versionName "3.2." + versionBuild

            vectorDrawables.useSupportLibrary = true
            testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

            multiDexEnabled true
        }

    } else {
        throw new GradleException("Could not read version.properties!")
    }

    dexOptions {
        jumboMode = true
    }

    Properties keyProps = new Properties()
    keyProps.load(new FileInputStream(file("../app/keystore.properties")))

    signingConfigs {
        release {
            storeFile file(keyProps['release.keystore'])
            storePassword keyProps['release.keystore.password']
            keyAlias keyProps['key.alias']
            keyPassword keyProps['key.password']
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    dataBinding {
        enabled = true
    }
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'

    androidTestImplementation "tools.fastlane:screengrab:1.1.0"
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.annotation:annotation:1.1.0'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${versions.kotlin}"

    implementation "androidx.multidex:multidex:${versions.multidex}"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    implementation 'androidx.vectordrawable:vectordrawable-animated:1.1.0'
    implementation "androidx.constraintlayout:constraintlayout:${versions.const_layout}"

    implementation "com.google.android.gms:play-services-auth:17.0.0"
    implementation "com.google.firebase:firebase-core:17.2.2"
    implementation "com.google.firebase:firebase-auth:19.2.0"
    implementation "com.google.firebase:firebase-database:19.2.1"
    implementation "com.google.firebase:firebase-messaging:20.1.0"
    implementation "com.google.firebase:firebase-storage:19.1.1"

    implementation "com.firebase:firebase-jobdispatcher:0.8.5"

    implementation "uk.co.samuelwall:material-tap-target-prompt:2.0.1"
    implementation "com.nostra13.universalimageloader:universal-image-loader:1.9.5"
    implementation "com.github.hotchemi:android-rate:1.0.1"
    implementation "org.apache.commons:commons-lang3:3.5"
    implementation("com.afollestad.material-dialogs:core:0.9.6.0")
    implementation "net.danlew:android.joda:2.9.4.2"
    implementation "com.facebook.android:facebook-android-sdk:4.23.0"
    implementation "com.mikepenz:iconics-core:2.8.1@aar"
    implementation "com.mikepenz:google-material-typeface:2.2.0.3.original@aar"
    implementation('com.crashlytics.sdk.android:crashlytics:2.6.5@aar') {
        transitive = true
    }
    implementation "com.github.pwittchen:reactivenetwork:0.8.0"
    implementation "com.thefinestartist:finestwebview:1.2.7"
    implementation "com.github.javiersantos:MaterialStyledDialogs:2.1"
    implementation "net.opacapp:multiline-collapsingtoolbar:1.4.0"

    // Glide
    implementation "com.github.bumptech.glide:glide:${versions.glide}"
    kapt "com.github.bumptech.glide:compiler:${versions.glide}"

    implementation "com.jakewharton.timber:timber:${versions.timber}"
}

apply plugin: 'com.google.gms.google-services'
